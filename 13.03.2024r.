# Weronika Mądzielewska
# Technologie cyfryzacji danych biotechnologicznych
# 13.03.2024r.

library(rtracklayer)
library("ggplot2")

setwd(dir="c:/Users/Student/OneDrive - University of Warmia and Mazuria in Olsztyn/Pulpit/WerMad/")
getwd()

#TABELA======================================================
gtf=import.gff("Homo_sapiens.GRCh38.111.chr.gtf")
class(gtf)
summary(gtf)
structure(gtf)

gtf_tab=as.data.frame(gtf)
table(gtf_tab$seqnames)
table(gtf_tab$gene_biotype)
head(gtf)

gtf_geny=gtf_tab[gtf_tab$type=="gene",]
table(gtf_geny$gene_biotype)
ggplot(gtf_geny,aes(gtf_geny$width,gtf_geny$start,colour=gtf_geny$gene_biotype))+geom_point()

#WYKRES1=====================================================
#pieplot lub barplot obrazujacy udzial poszczegolnych typow genow
sumy <- aggregate(start ~ gene_biotype, data = gtf_geny, FUN = length)
ggplot(sumy, aes(x = "", y = start, fill = gene_biotype)) +
  geom_bar(width = 1, stat = "identity") +
  coord_polar(theta = "y") +
  geom_text(aes(label = gene_biotype), position = position_stack(vjust = 0.5), size = 3, color = "white") +  # Dodanie etykiet
  labs(fill = "Gene Biotype", title = "Wykres kołowy biotypów genów") +
  theme_void() +
  theme(legend.position = "right")

#WYKRES2=====================================================
#boxplot lub violinplot rokzladu dlugosci z podzialem na chromosomy
ggplot(gtf_geny, aes(x = factor(seqnames), y = width, fill = factor(seqnames))) +
  geom_violin() +
  labs(x = "seqnames", y = "width", fill = "seqnames") +
  scale_fill_manual(values=rainbow(length(unique(gtf_geny$seqnames)))) +
  scale_y_continuous(limits=c(0,1500))

#WYKRES3=====================================================
#scaterplot (wykresu punktowy) z rozkladu dlugosci genow/transkryptow
# wzgledem ilosci exonow w gene/transkrypcie z podzialem na 3 najbardziej liczne kategorie biotypow
library(dplyr)

top_biotype <- names(sort(table(gtf_geny$gene_biotype), decreasing = TRUE))[1:3]

gtf_top_biotype <- gtf_geny %>%
  filter(gene_biotype %in% top_biotype)

exon_counts <- gtf_top_biotype %>%
  group_by(gene_id) %>%
  summarise(exon_count = sum(width))

merged_data <- inner_join(gtf_top_biotype, exon_counts, by = "gene_id")

ggplot(merged_data, aes(x = exon_count, y = width, color = gene_biotype)) +
  geom_point() +
  facet_wrap(~ gene_biotype, scales = "free") +
  labs(x = "Ilość exonów", y = "Długość genów/transkryptów", color = "Biotyp") +
  theme_minimal()
